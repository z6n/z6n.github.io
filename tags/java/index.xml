<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Java on Z6N</title>
    <link>https://z6n.github.io/tags/java/</link>
    <description>Recent content in Java on Z6N</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cn-zh</language>
    <lastBuildDate>Mon, 17 Dec 2018 20:19:48 +0800</lastBuildDate>
    
	<atom:link href="https://z6n.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Spring Boot 源码分析-启动流程(1)</title>
      <link>https://z6n.github.io/2018/12/sb_p1/</link>
      <pubDate>Mon, 17 Dec 2018 20:19:48 +0800</pubDate>
      
      <guid>https://z6n.github.io/2018/12/sb_p1/</guid>
      <description>源码版本  spring boot 2.1.0.RELEASE
  
入口代码 @SpringBootApplication public class Run { public static void main(String[] args) { SpringApplication app = new SpringApplication(Run.class); // 1 app.run(args); // 2 } }  构造方法中的加载过程 在new SpringApplication(Run.class)中实际调用的是SpringApplication(ResourceLoader resourceLoader, Class&amp;lt;?&amp;gt;... primarySources)构造方法，在构造方法中主要执行了一些必要的查找初始化工作。   
public SpringApplication(ResourceLoader resourceLoader, Class&amp;lt;?&amp;gt;... primarySources) { this.resourceLoader = resourceLoader; Assert.notNull(primarySources, &amp;quot;PrimarySources must not be null&amp;quot;); this.primarySources = new LinkedHashSet&amp;lt;&amp;gt;(Arrays.asList(primarySources)); this.webApplicationType = WebApplicationType.deduceFromClasspath(); // 1-1 setInitializers((Collection) getSpringFactoriesInstances( ApplicationContextInitializer.class)); // 1-2 setListeners((Collection) getSpringFactoriesInstances(ApplicationListener.</description>
    </item>
    
  </channel>
</rss>